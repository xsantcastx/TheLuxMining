  addToCart() {
    if (!this.producto) return;
    
    this.cartService.add(this.producto, 1);
  }

  getAdditionalSpecKeys(): string[] {
    if (!this.producto?.specs) return [];
    
    const knownKeys = [
      'grosor', 'size', 'finish', 'thicknessMm', 'usage',
      'hashRate', 'powerConsumption', 'efficiency', 'algorithm',
      'chipType', 'cooling', 'dimensions', 'weight', 'temperature',
      'network', 'voltage', 'warranty',
      'waterAbsorption', 'abrasionResistance', 'chemicalResistance', 'fireResistance'
    ];
    
    return Object.keys(this.producto.specs).filter(key => !knownKeys.includes(key));
  }

  formatSpecLabel(key: string): string {
    return key
      .replace(/([A-Z])/g, ' ')
      .replace(/_/g, ' ')
      .replace(/^./, str => str.toUpperCase())
      .trim();
  }
}
